name: Continuous Integration

on: [push, pull_request, workflow_dispatch]

jobs:
  # Use the following command to fix words locally:
  # codespell --write-changes
  check-spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check spelling
        uses: codespell-project/actions-codespell@v1

  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --all -- --check

  docs:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check documentation
        run: RUSTDOCFLAGS="-Dwarnings" cargo doc --document-private-items --no-deps

  build:
    name: Execute CI script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: "Installs SoftHSM and execute tests"
        uses: ./.github/actions/ci_script

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo check --all-features --workspace --all-targets

  tests-kryoptic:
    name: Run tests against Kryoptic
    runs-on: ubuntu-latest
    container: fedora:rawhide
    steps:
      - name: Install dependencies
        run: dnf -y install git cargo clang-devel kryoptic
      - uses: actions/checkout@v4
      - name: Test script
        env:
          KRYOPTIC_CONF: /tmp/kryoptic.sql
          TEST_PKCS11_MODULE: /usr/lib64/pkcs11/libkryoptic_pkcs11.so
        run: |
          RUST_BACKTRACE=1 cargo build &&
          RUST_BACKTRACE=1 cargo build --all-features &&
          RUST_BACKTRACE=1 cargo test


  tests-softokn:
    name: Run tests against Softokn
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install dependencies
        run: sudo apt-get -yq install libnss3 libnss3-tools libnss3-dev
      - name: Test script
        env:
          NSS_LIB_PARAMS: configDir=/tmp/nssdb/
          TEST_PKCS11_MODULE: /usr/lib/x86_64-linux-gnu/libsoftokn3.so
          TEST_TOKEN_LABEL: NSS Certificate DB
          TEST_SKIP_TOKEN_INIT: 1
        run: |
          mkdir /tmp/nssdb/ &&
          echo "fedcba" > /tmp/nssdb/pinfile &&
          certutil -N -d /tmp/nssdb/ -f /tmp/nssdb/pinfile &&
          RUST_BACKTRACE=1 cargo build &&
          RUST_BACKTRACE=1 cargo build --all-features &&
          RUST_BACKTRACE=1 cargo test


  build-msrv:
    name: MSRV - Execute CI script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain on MSRV
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.66.0
      - name: "Installs SoftHSM and execute tests"
        uses: ./.github/actions/ci_script

  links:
    name: Check links
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Link Checker
      uses: peter-evans/link-checker@v1
      with:
        args: -v -r *.md
    - name: Fail if there were link errors
      run: exit ${{ steps.lc.outputs.exit_code }}
